import React, { useEffect, useState } from "react";
import liff from "@line/liff";
import "./App.css"; // Import the CSS file

function App() {
    const [user, setUser] = useState(null);
    const [iceType, setIceType] = useState("‡∏´‡∏•‡∏≠‡∏î‡πÄ‡∏•‡πá‡∏Å");
    const [quantity, setQuantity] = useState(1);
    const [contactNumber, setContactNumber] = useState("");
    const [address, setAddress] = useState(""); // New state for address
    const [location, setLocation] = useState({ latitude: null, longitude: null });
    const [orderHistory, setOrderHistory] = useState([]); // New state for order history

    useEffect(() => {
        async function initLIFF() {
            try {
                await liff.init({ 
                    liffId: "2006986568-yjrOkKqm",
                    withLoginOnExternalBrowser: true, // Ensure login on external browser
                    scopes: ["openid", "profile", "chat_message.write"] // Add required scopes
                });
                if (!liff.isLoggedIn()) liff.login();
                const profile = await liff.getProfile();
                setUser(profile);
            } catch (error) {
                console.error("‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô LIFF ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß", error);
            }
        }
        initLIFF();
    }, []);

    const getLocation = () => {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition((position) => {
                setLocation({
                    latitude: position.coords.latitude,
                    longitude: position.coords.longitude,
                });
            }, (error) => {
                console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏û‡∏¥‡∏Å‡∏±‡∏î", error);
                alert("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏±‡∏ö‡∏û‡∏¥‡∏Å‡∏±‡∏î‡πÑ‡∏î‡πâ");
            });
        } else {
            alert("‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏û‡∏¥‡∏Å‡∏±‡∏î");
        }
    };

    const validateOrder = () => {
        if (!contactNumber) {
            alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠");
            return false;
        }
        if (!address) {
            alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà");
            return false;
        }
        return true;
    };

    const sendOrder = async () => {
        if (!liff.isLoggedIn()) return alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠");

        if (!validateOrder()) return;

        const orderMessage = `üßä ‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ô‡πâ‡∏≥‡πÅ‡∏Ç‡πá‡∏á: ${iceType} ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô ${quantity} ‡∏ñ‡∏∏‡∏á\nüìç ‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà: ${address}\nüìû ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠: ${contactNumber}\nüåê ‡∏û‡∏¥‡∏Å‡∏±‡∏î: ${location.latitude}, ${location.longitude}`;

        if (!window.confirm(`‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå:\n\n${orderMessage}`)) {
            return;
        }

        if (!liff.isInClient()) {
            return alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏õ‡∏ô‡∏µ‡πâ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡πÅ‡∏≠‡∏õ LINE ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠");
        }

        try {
            await liff.sendMessages([{ type: "text", text: orderMessage }]);
            alert("‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß! ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏≤‡∏Å‡∏ö‡∏≤‡∏ó‡∏ó‡∏µ‡πà‡∏°‡∏∏‡∏°‡∏Ç‡∏ß‡∏≤‡∏ö‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏õ");

            // Save order to history
            const newOrder = { iceType, quantity, contactNumber, address, location, date: new Date() };
            setOrderHistory([...orderHistory, newOrder]);
        } catch (err) {
            console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°:", err);
            alert(`‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠: ${err.message}`);
        }
    };

    return (
        <div className="App">
            <h2>‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ô‡πâ‡∏≥‡πÅ‡∏Ç‡πá‡∏á‡∏ú‡πà‡∏≤‡∏ô LINE</h2>
            {user ? <p>‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ {user.displayName}</p> : <p>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</p>}
            <select value={iceType} onChange={(e) => setIceType(e.target.value)}>
                <option value="‡∏´‡∏•‡∏≠‡∏î‡πÄ‡∏•‡πá‡∏Å">‡∏´‡∏•‡∏≠‡∏î‡πÄ‡∏•‡πá‡∏Å (40 ‡∏ö‡∏≤‡∏ó)</option>
                <option value="‡∏´‡∏•‡∏≠‡∏î‡πÉ‡∏´‡∏ç‡πà">‡∏´‡∏•‡∏≠‡∏î‡πÉ‡∏´‡∏ç‡πà (80 ‡∏ö‡∏≤‡∏ó)</option>
                <option value="‡∏ô‡πâ‡∏≥‡πÅ‡∏Ç‡πá‡∏á‡∏ö‡∏î">‡∏ô‡πâ‡∏≥‡πÅ‡∏Ç‡πá‡∏á‡∏ö‡∏î (35 ‡∏ö‡∏≤‡∏ó)</option>
            </select>
            <input
                type="number"
                value={quantity}
                onChange={(e) => setQuantity(e.target.value)}
                placeholder="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ñ‡∏∏‡∏á"
                min="1"
                style={{ width: "100%", maxWidth: "300px" }}
            />
            <input
                type="text"
                value={contactNumber}
                onChange={(e) => setContactNumber(e.target.value)}
                placeholder="‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠"
                style={{ width: "100%", maxWidth: "300px" }}
            />
            <input
                type="text"
                value={address}
                onChange={(e) => setAddress(e.target.value)}
                placeholder="‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà"
                style={{ width: "100%", maxWidth: "300px" }}
            />
            <button onClick={getLocation} style={{ width: "100%", maxWidth: "300px" }}>‡∏£‡∏±‡∏ö‡∏û‡∏¥‡∏Å‡∏±‡∏î</button>
            <p>‡∏û‡∏¥‡∏Å‡∏±‡∏î: {location.latitude}, {location.longitude}</p>
            <button onClick={sendOrder} style={{ width: "100%", maxWidth: "300px" }}>‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ô‡πâ‡∏≥‡πÅ‡∏Ç‡πá‡∏á</button>
            <h3>‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠</h3>
            <ul>
                {orderHistory.map((order, index) => (
                    <li key={index}>
                        {order.date.toLocaleString()}: {order.iceType} ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {order.quantity} ‡∏ñ‡∏∏‡∏á, ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà: {order.address}, ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠: {order.contactNumber}, ‡∏û‡∏¥‡∏Å‡∏±‡∏î: {order.location.latitude}, {order.location.longitude}
                    </li>
                ))}
            </ul>
        </div>
    );
}

export default App;
